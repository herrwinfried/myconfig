#!/bin/bash
GetScriptDir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
GetScriptName=$(basename "${BASH_SOURCE[0]}")

Black='\033[0;30m'
DarkBlue='\033[0;34m'
DarkGreen='\033[0;32m'
DarkCyan='\033[0;36m'
DarkRed='\033[0;31m'
DarkMagenta='\033[0;35m'
DarkYellow='\033[0;33m'
Gray='\033[0;37m'
DarkGray='\033[1;30m'
Blue='\033[1;34m'
Green='\033[1;32m'
Cyan='\033[1;36m'
Red='\033[1;31m'
Magenta='\033[1;35m'
Yellow='\033[1;33m'
White='\033[1;37m'
NoColor='\033[0m' # No Color

USER_PASSWORD=""
function rootpassword {
if [[ $EUID -eq 0 ]]; then
     echo -e "${Red}You must not be Super User/Root.${NoColor}"
   exit 1
fi
sudo --reset-timestamp
# shellcheck disable=SC2162
echo -n -e "${Cyan}Password for ${Red}root:${NoColor} "
# shellcheck disable=SC2162
read -s USER_PASSWORD
echo -e "\n${Yellow}Password checking...${NoColor}"
if echo "$USER_PASSWORD" | sudo -S true >/dev/null 2>&1; then
    echo -e "${Green}Password verified.${NoColor}\n"
    function SUDO {
        # shellcheck disable=SC2317
        echo "$USER_PASSWORD" | sudo -S "$@"
    }
else
    echo -e "${Red}Password could not be verified ${NoColor}\n"
    rootpassword
fi  
}
function rootpassword_end {
    unset USER_PASSWORD
    sudo --reset-timestamp
}

function InternetCheck {
 curl -s --head http://www.google.com | grep "200 OK" > /dev/null
    if [ $? -ne 0 ]; then
        echo -e "${Red}You do not have an Internet Connection.${NoColor}"
        exit 1
    fi   
}
function errorHelp {
    echo "ERROR! Example: $0 PTB"
    echo "development, canary, ptb, stable"
    exit 1
}

if [ $# -eq 0 ]; then
    errorHelp
    exit 1
fi

n1=$(echo "$1" | tr '[:upper:]' '[:lower:]')
rootpassword
if [ "$n1" == "update" ]; then
    # shellcheck disable=SC2086
    curl -L "https://raw.githubusercontent.com/herrwinfried/myconfig/linux/data/scripts/$GetScriptName" -o $GetScriptDir/$GetScriptName
    exit 1
elif [ "$n1" == "development" ]; then
    Version="development"
    AppName="DiscordDevelopment"
elif [ "$n1" == "canary" ]; then
    Version="canary"
    AppName="DiscordCanary"
elif [ "$n1" == "ptb" ]; then
    Version="ptb"
    AppName="DiscordPTB"
elif [ "$n1" == "stable" ]; then
    Version=""
    AppName="Discord"
fi

if [[ ! -x $(command -v curl) ]]; then
echo -e "${Red}Not Found curl ${NoColor}\n"
exit 1
fi

if [[ ! -x $(command -v tar) ]]; then
echo -e "${Red}Not Found tar ${NoColor}\n"
exit 1
fi

InternetCheck

test -d "/opt/${AppName}" && SUDO rm -rf "/opt/${AppName}"
test -f "/tmp/${AppName}.tar.gz" && SUDO rm -rf "/tmp/${AppName}.tar.gz"

if [[ -z $Version ]]; then 
# shellcheck disable=SC2086
curl -L "https://discord.com/api/download?platform=linux&format=tar.gz" -o "/tmp/${AppName}.tar.gz"
else
# shellcheck disable=SC2086
curl -L "https://discord.com/api/download/$Version?platform=linux&format=tar.gz" -o "/tmp/${AppName}.tar.gz"
fi

SUDO mkdir -p "/opt/${AppName}"
sleep 3

# shellcheck disable=SC2086
SUDO tar -xzf "/tmp/${AppName}.tar.gz" -C /opt/

SUDO su -c "echo \"[Desktop Entry]
Name=${AppName}
StartupWMClass=${AppName}
Comment=All-in-one voice and text chat for gamers that's free, secure, and works on both your desktop and phone.
GenericName=Internet Messenger
Exec=/opt/${AppName}/${AppName}
Icon=/opt/${AppName}/discord.png
Type=Application
Categories=Network;InstantMessaging;
Path=/opt/${AppName}\" | tee /usr/share/applications/${AppName}.desktop"

SUDO chmod -R 777 "/opt/${AppName}"


rootpassword_end
#!/bin/bash
GetScriptDir=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
GetScriptName=$(basename "${BASH_SOURCE[0]}")
BOARD_VENDOR=$(cat /sys/class/dmi/id/board_vendor 2>/dev/null | tr '[:upper:]' '[:lower:]')

Black='\033[0;30m'
DarkBlue='\033[0;34m'
DarkGreen='\033[0;32m'
DarkCyan='\033[0;36m'
DarkRed='\033[0;31m'
DarkMagenta='\033[0;35m'
DarkYellow='\033[0;33m'
Gray='\033[0;37m'
DarkGray='\033[1;30m'
Blue='\033[1;34m'
Green='\033[1;32m'
Cyan='\033[1;36m'
Red='\033[1;31m'
Magenta='\033[1;35m'
Yellow='\033[1;33m'
White='\033[1;37m'
NoColor='\033[0m' # No Color

USER_PASSWORD=""
function rootpassword {
if [[ $EUID -eq 0 ]]; then
     echo -e "${Red}You must not be Super User/Root.${NoColor}"
   exit 1
fi
sudo --reset-timestamp
# shellcheck disable=SC2162
echo -n -e "${Cyan}Password for ${Red}root:${NoColor} "
# shellcheck disable=SC2162
read -s USER_PASSWORD
echo -e "\n${Yellow}Password checking...${NoColor}"
if echo "$USER_PASSWORD" | sudo -S true >/dev/null 2>&1; then
    echo -e "${Green}Password verified.${NoColor}\n"
    function SUDO {
        # shellcheck disable=SC2317
        echo "$USER_PASSWORD" | sudo -S "$@"
    }
else
    echo -e "${Red}Password could not be verified ${NoColor}\n"
    rootpassword
fi  
}
function rootpassword_end {
    unset USER_PASSWORD
    sudo --reset-timestamp
}

function InternetCheck {
 curl -s --head http://www.google.com | grep "200 OK" > /dev/null
    if [ $? -ne 0 ]; then
        echo -e "${Red}You do not have an Internet Connection.${NoColor}"
        exit 1
    fi   
}

if [[ $BOARD_VENDOR == *"asus"* ]]; then
if [[ ! -x $(command -v curl) ]]; then
echo -e "${Red}Not Found curl ${NoColor}\n"
exit 1
fi

if [[ ! -x $(command -v tar) ]]; then
echo -e "${Red}Not Found tar ${NoColor}\n"
exit 1
fi
if [[ ! -x $(command -v jq) ]]; then
echo -e "${Red}Not Found jq ${NoColor}\n"
exit 1
fi

InternetCheck

asustheme=$(curl -s "https://api.github.com/repos/AdisonCavani/distro-grub-themes/releases/latest" | jq -r ".assets[] | select(.name | test(\"asus.tar\")) | .browser_download_url")
DEFAULT_GRUB_THEME="GRUB_THEME=/boot/grub2/themes/openSUSE/theme.txt"
if [ -d "/tmp/asus.tar" ]; then
    SUDO rm -rf /tmp/asus*
fi

if [ -d "/boot/grub2.d/themes/asus" ]; then
    echo -e "${Yellow}Removing the /boot/grub2.d/themes/asus folder..${NoColor}"
    SUDO rm -rf /boot/grub2.d/themes/asus
    if [ "$current_grub_theme" != "$DEFAULT_GRUB_THEME" ]; then
    SUDO sed -i "s|^GRUB_THEME=.*|$DEFAULT_GRUB_THEME|" /etc/default/grub
    echo -e "${Green}GRUB_THEME value successfully reverted to its initial state.${NoColor}"
fi
fi
sleep 3

curl -L "$asustheme" -o "/tmp/asus.tar"

SUDO mkdir -p /boot/grub2.d/themes/asus
SUDO tar -xf "/tmp/asus.tar" -C /boot/grub2.d/themes/asus

new_grub_theme="GRUB_THEME=/boot/grub2.d/themes/asus/theme.txt"
current_grub_theme=$(grep -E "^GRUB_THEME=" /etc/default/grub)

if [ "$current_grub_theme" != "$new_grub_theme" ]; then
    SUDO sed -i "s|^GRUB_THEME=.*|$new_grub_theme|" /etc/default/grub
    SUDO grub2-mkconfig -o /boot/grub2/grub.cfg
    echo -e "${Green}GRUB_THEME value successfully modified and Grub updated.${NoColor}"
fi

fi
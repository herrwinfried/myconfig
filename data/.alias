# Only ZSH
if [ -n "$ZSH_VERSION" ]; then
if [ -f /etc/zsh_command_not_found ]; then
      . /etc/zsh_command_not_found
  fi

# Only ZSH ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fi


# Only Bash
# if [ -n "$BASH_VERSION" ]; then

# Only Bash ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
# fi


#alias systemupdate='sudo su -c "sudo zypper --gpg-auto-import-keys ref && sudo zypper --gpg-auto-import-keys dup -l && sudo flatpak update && sudo snap refresh || echo Hey bir sorun oldu sanırım"'
if [ "$(echo $(cat /proc/cpuinfo | grep -m1 microcode | cut -f2 -d:))" != "0xffffffff" ]; then
alias podmanRun='echo "podman system service --time=0 tcp:0.0.0.0:12979"; podman system service --time=0 tcp:0.0.0.0:12979'

if [[ -t ancs4linux-ctl ]]; then

function ios_pair {

iosAddress=$(ancs4linux-ctl get-all-hci | jq -r '.[0]')
echo "Telefonunuzdan $(hostnamectl hostname) adlı cihaza bağlanın."
ancs4linux-ctl enable-advertising --hci-address $iosAddress --name $(hostnamectl hostname)

}
fi

fi

function Base_Font {
# Colors
termcols=$(tput cols)
bold="$(tput bold)"
fontnormal="$(tput init)"
fontreset="$(tput reset)"
underline="$(tput smul)"
standout="$(tput smso)"
normal="$(tput sgr0)"
black="$(tput setaf 0)"
red="$(tput setaf 1)"
green="$(tput setaf 2)"
yellow="$(tput setaf 3)"
blue="$(tput setaf 4)"
magenta="$(tput setaf 5)"
cyan="$(tput setaf 6)"
white="$(tput setaf 7)"
# Colors Finish
}

function SystemUpdate {
if [ $# -eq 0 ]; then
sudo su -c "sudo zypper --gpg-auto-import-keys ref && sudo zypper --gpg-auto-import-keys dup -l && sudo flatpak update && sudo snap refresh || echo Hey bir sorun oldu sanırım"
elif [ $1 = "yes" ]; then
sudo su -c "sudo zypper --gpg-auto-import-keys ref && sudo zypper --gpg-auto-import-keys dup -l -y && sudo flatpak update -y && sudo snap refresh || echo Hey bir sorun oldu sanırım"
elif [ $# -eq 1 ] && [ $1 = "pk" ]; then
sudo su -c "pkcon get-updates || echo Hey bir sorun oldu sanırım"
elif [ $# -eq 2 ] && [ $1 = "pk" ] && [ $2 = "yes" ]; then
sudo su -c "pkcon get-updates -y || echo Hey bir sorun oldu sanırım"
elif [ $# -eq 1 ] && [ $1 = "container" ]; then
sudo su -c "sudo flatpak update && sudo snap refresh || echo Hey bir sorun oldu sanırım"
elif [ $# -eq 2 ] && [ $1 = "container" ] && [ $2 = "yes" ]; then
sudo su -c "sudo flatpak update -y && sudo snap refresh || echo Hey bir sorun oldu sanırım"
else
Base_Font

echo "$red""Hmm, Yanlış değer seçtiniz yada bir sorun oldu..."
echo "$yellow""Seçebilceğin Komutlar:"
echo "$magenta""SystemUpdate""$blue"   "                              | zypper üzerinden paketleri günceller, flatpak günceller ve snap günceller."
echo "$magenta""SystemUpdate""$white""$yellow"" yes""$blue"   "                          | zypper üzerinden paketleri günceller, flatpak günceller ve snap günceller.""$red""Sizden İzin istemez"
echo "$magenta""SystemUpdate""$white""$yellow"" pk""$blue"   "                           | pkcon üzerinden güncellemeleri yap"
echo "$magenta""SystemUpdate""$white""$yellow"" pk""$red" "yes"   "$blue"   "                      | pkcon üzerinden güncellemeleri yap.""$red""Sizden İzin istemez"
echo "$magenta""SystemUpdate""$white""$yellow"" container"  "$blue"   "                   | Flatpak ve snapd güncellemeleri yap."
echo "$magenta""SystemUpdate""$white""$yellow"" container""$red" "yes"  "$blue"   "               | Flatpak ve snapd güncellemeleri yap.""$red""Sizden İzin istemez"
echo "$white"
fi
}


function rootMode {
if ! [ $# -eq 0 ]; then
XDG_DE=$(echo $XDG_CURRENT_DESKTOP | tr '[:upper:]' '[:lower:]')
if [[ $XDG_DE == "kde" ]]; then 
sudo pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY KDE_SESSION_VERSION=5 KDE_FULL_SESSION=true $@
else 
sudo pkexec env DISPLAY=$DISPLAY XAUTHORITY=$XAUTHORITY $@
fi

else
echo "Birşey Yazmadın..."
fi
}


function englishRun {
if ! [ $# -eq 0 ]; then

LC_ALL=C LANG=$LC_ALL $@

else
echo "Birşey Yazmadın..."
fi
}

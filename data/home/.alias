#!/bin/bash
os_type=$(uname -s | tr '[:upper:]' '[:lower:]')
if [[ "$os_type" != *"mingw64_nt"* ]]; then
echo "$(tput setaf 1)This bash file is designed for use on windows. It only works in environments like Git bash. Please check your operating system.$(tput setaf 7)"
exit 1
fi

if [ ! -n "$BASH_VERSION" ]; then
echo "$(tput setaf 1)This file is for bash. Are you sure you're using Bash?$(tput setaf 7)"
exit 1
fi

OhMyPoshTheme="$HOME/.poshthemes/default.omp.json"

if [ -d "$HOME/Documents/GitBash/scripts" ]; then
    export PATH="$PATH:$HOME/Documents/GitBash/scripts"
fi

if [ -f "$PROGRAMFILES/Docker/Docker/DockerCli.exe" ]; then
    function Switch-DockerDeamon {
        "$PROGRAMFILES/Docker/Docker/DockerCli.exe" -SwitchDaemon
    }
fi

if command -v docker &>/dev/null; then
    function Get-DockerMode() {
        dockerCommand=$(docker info 2>/dev/null | grep "OSType")
        if [ -n "$dockerCommand" ]; then
            ostype=$(echo "$dockerCommand" | grep -oP 'OSType:\s*\K\S+')
            echo -e "OS: $ostype"
        else
            echo -e "OS Not Found"
        fi
    }

    function Get-DockerModeValue() {
        dockerCommand=$(docker info 2>/dev/null | grep "OSType")
        if [ -n "$dockerCommand" ]; then
            ostype=$(echo "$dockerCommand" | grep -oP 'OSType:\s*\K\S+')
            echo "$ostype"
        fi
    }
fi

function Create-TruckersMP-lns() {
atsModsPath="$HOME/.local/share/TruckersMP/installation/data/ats/mods"
atsTargetPath="$HOME/Documents/American Truck Simulator/mod"

ets2ModsPath="$HOME/.local/share/TruckersMP/installation/data/ets2/mods"
ets2TargetPath="$HOME/Documents/Euro Truck Simulator 2/mod"

sharedModsPath="$HOME/.local/share/TruckersMP/installation/data/shared/mods"

mkdir -p "$atsTargetPath"

for modFile in "$atsModsPath"/*.mp; do
    linkPath="$atsTargetPath/$(basename "${modFile%.*}").scs"
    ln -sf "$modFile" "$linkPath"
done

mkdir -p "$ets2TargetPath"

for modFile in "$ets2ModsPath"/*.mp; do
    linkPath="$ets2TargetPath/$(basename "${modFile%.*}").scs"
    ln -sf "$modFile" "$linkPath"
done

for modFile in "$sharedModsPath"/*.mp; do
    atsDestinationPath="$atsTargetPath/$(basename "${modFile%.*}").scs"
    ln -sf "$modFile" "$atsDestinationPath"
    
    ets2DestinationPath="$ets2TargetPath/$(basename "${modFile%.*}").scs"
    ln -sf "$modFile" "$ets2DestinationPath"
done
}

if [ -f "$OhMyPoshTheme" ] && command -v oh-my-posh &>/dev/null; then
    oh-my-posh init bash --config $OhMyPoshTheme | eval
fi

function Update-OhMyPoshTheme() {
    test -f "$OhMyPoshTheme" && rm -f "$OhMyPoshTheme"
    wget "https://raw.githubusercontent.com/herrwinfried/myconfig/linux/data/home/.poshthemes/default.omp.json" -O "$HOME/.poshthemes/default.omp.json"
}

function Update-Alias() {
    test -f "$HOME/.alias.ps1" && rm -f "$HOME/.alias.ps1"
    wget -O "$HOME/.alias.ps1" "https://raw.githubusercontent.com/herrwinfried/myconfig/windows/data/home/.alias.ps1"

    test -f "$HOME/.alias" && rm -f "$HOME/.alias"
    wget -O "$HOME/.alias" "https://raw.githubusercontent.com/herrwinfried/myconfig/windows/data/home/.alias"

}
